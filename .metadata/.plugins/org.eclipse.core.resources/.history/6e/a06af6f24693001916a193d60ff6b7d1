package com.qa.client;

import java.io.IOException;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.HashMap;
import java.util.Map;

import org.apache.http.client.ClientProtocolException;
import org.apache.http.client.HttpClient;
import org.apache.http.client.methods.CloseableHttpResponse;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.client.utils.URIBuilder;
import org.apache.http.impl.client.CloseableHttpClient;
import org.apache.http.impl.client.HttpClients;
import org.apache.http.util.EntityUtils;
import org.json.JSONObject;

import com.qa.utils.TestUtils;

public class RestClient {
	public String boardId,listId,cardId;

	// 1. GET Method without Headers:
	public CloseableHttpResponse get() throws ClientProtocolException, IOException, URISyntaxException {
		CloseableHttpClient httpClient = HttpClients.createDefault();
		URIBuilder builder = new URIBuilder();
		builder.setScheme("https").setHost("api.trello.com/1").setPath("/boards/" + "5d09e69bd98d74398820c46b")
				.setParameter("key", "f9f57185a82caa431905f7e39bb8814f")
				.setParameter("token", "8917ac8db2a2614344847c9240b5879b0ed0586d4cea2a37b6673ad9f01c096e");

		URI uri = builder.build();
		HttpGet httpget = new HttpGet(uri); // http get request
		CloseableHttpResponse closebaleHttpResponse = httpClient.execute(httpget);

		return closebaleHttpResponse;

	}

//		//2. GET Method with Headers:
//			public CloseableHttpResponse get(String url, HashMap<String, String> headerMap) throws ClientProtocolException, IOException{
//			CloseableHttpClient httpClient = HttpClients.createDefault();
//			HttpGet httpget = new HttpGet(url); //http get request
//			
//			for(Map.Entry<String,String> entry : headerMap.entrySet()){
//				httpget.addHeader(entry.getKey(), entry.getValue());
//			}
//			CloseableHttpResponse closebaleHttpResponse =  httpClient.execute(httpget); //hit the GET URL
//			return closebaleHttpResponse;
//				
//			}

	// 2.POST BOARDS

	public void postBoard() throws ClientProtocolException, IOException, URISyntaxException {
		CloseableHttpClient httpClient = HttpClients.createDefault();
		URIBuilder builder = new URIBuilder();
		builder.setScheme("https").setHost("api.trello.com/1").setPath("/boards/")
				.setParameter("key", "f9f57185a82caa431905f7e39bb8814f")
				.setParameter("token", "8917ac8db2a2614344847c9240b5879b0ed0586d4cea2a37b6673ad9f01c096e")
				.setParameter("name", "L");
		URI uri = builder.build();
		HttpPost httpget = new HttpPost(uri);
		CloseableHttpResponse closebaleHttpResponse = httpClient.execute(httpget);
		String responseString = EntityUtils.toString(closebaleHttpResponse.getEntity(), "UTF-8");
		JSONObject responseJson = new JSONObject(responseString);
		boardId = TestUtils.getValueByJPath(responseJson, "/id");
		System.out.println("Board ID is" + " " + boardId);
		
	}

	// 3.Post List

	public void postList() throws ClientProtocolException, IOException, URISyntaxException {
		CloseableHttpClient httpClient = HttpClients.createDefault();
		URIBuilder builder = new URIBuilder();
		builder.setScheme("https").setHost("api.trello.com/1").setPath("/lists/")
				.setParameter("key", "f9f57185a82caa431905f7e39bb8814f")
				.setParameter("token", "8917ac8db2a2614344847c9240b5879b0ed0586d4cea2a37b6673ad9f01c096e")
				.setParameter("name", "List1").setParameter("idBoard", boardId);
		URI uri = builder.build();
		HttpPost httpget = new HttpPost(uri);
		CloseableHttpResponse closebaleHttpResponse = httpClient.execute(httpget);
		String responseString = EntityUtils.toString(closebaleHttpResponse.getEntity(), "UTF-8");
		JSONObject responseJson = new JSONObject(responseString);
		listId = TestUtils.getValueByJPath(responseJson, "/id");
		System.out.println("List ID is" + " " + listId);
	}
	
	//4.Post Card
	public CloseableHttpClient postCard() throws ClientProtocolException, IOException, URISyntaxException {
		CloseableHttpClient httpClient = HttpClients.createDefault();
		URIBuilder builder = new URIBuilder();
		builder.setScheme("https").setHost("api.trello.com/1").setPath("/cards/")
				.setParameter("key", "f9f57185a82caa431905f7e39bb8814f")
				.setParameter("token", "8917ac8db2a2614344847c9240b5879b0ed0586d4cea2a37b6673ad9f01c096e")
				.setParameter("name", "List1").setParameter("idList", listId);
		URI uri = builder.build();
		HttpPost httpget = new HttpPost(uri);
		CloseableHttpResponse closebaleHttpResponse = httpClient.execute(httpget);
		String responseString = EntityUtils.toString(closebaleHttpResponse.getEntity(), "UTF-8");
		JSONObject responseJson = new JSONObject(responseString);
		cardId = TestUtils.getValueByJPath(responseJson, "/id");
		System.out.println("Card ID is" + " " + cardId);
		return httpClient;
		//https://api.trello.com/1/cards?idList=5d0b5a1302df3473ffcaffc0&keepFromSource=all&key=f9f57185a82caa431905f7e39bb8814f&token=8917ac8db2a2614344847c9240b5879b0ed0586d4cea2a37b6673ad9f01c096e
	}
	

}
